generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TipoCliente {
  USER
  ADMIN
}

model Cliente {
  id              Int         @id @default(autoincrement())
  nombres         String      @db.VarChar(40)
  apellidoP       String      @map("apellido_p") @db.VarChar(20)
  apellidoM       String?     @map("apellido_m") @db.VarChar(20)
  tipo            TipoCliente @default(USER) @map("tipo_cliente")
  email           String      @unique @db.VarChar(25)
  password        String      @db.VarChar(60)
  fechaNacimiento DateTime    @map("fecha_nacimiento") @db.Date
  fechaCreacion   DateTime    @default(now()) @map("fecha_creacion") @db.Date

  tarjetas Tarjeta[]
  reservas Reserva[]
}

model Tarjeta {
  id            Int    @id @default(autoincrement())
  numeroTarjeta String @map("numero_tarjeta") @db.VarChar(50)
  clienteId     Int    @map("cliente_id")

  Cliente Cliente @relation(fields: [clienteId], references: [id], onDelete: Cascade)
}

model Estado {
  id     Int    @id @default(autoincrement())
  nombre String @unique @db.VarChar(100)

  Ciudades Ciudad[]
}

model Ciudad {
  id       Int    @id @default(autoincrement())
  nombre   String @unique @db.VarChar(100)
  estadoId Int?   @map("estado_id")

  Estado       Estado?       @relation(fields: [estadoId], references: [id])
  Alojamientos Alojamiento[]
}

model Alojamiento {
  id                Int     @id @default(autoincrement())
  descripcion       String  @db.Text
  banios            Int     @default(0)
  alberca           Boolean @default(false)
  cocina            Boolean @default(false)
  wifi              Boolean @default(false)
  television        Boolean @default(false)
  aireAcondicionado Boolean @default(false) @map("aire_acondicionado")
  precioPorNoche    Decimal @map("precio_por_noche") @db.Decimal(10, 2)
  latitud           Decimal @db.Decimal(9, 6)
  longitud          Decimal @db.Decimal(9, 6)
  ciudadId          Int?

  imagenes Imagen[]
  reservas Reserva[]
  Ciudad   Ciudad?   @relation(fields: [ciudadId], references: [id])
}

model Imagen {
  id            Int @id @default(autoincrement())
  alojamientoId Int @map("alojamiento_id")

  Alojamiento Alojamiento @relation(fields: [alojamientoId], references: [id], onDelete: Cascade)
}

model Reserva {
  id            Int      @id @default(autoincrement())
  inicio        DateTime @default(now()) @db.Date
  fin           DateTime @db.Date
  total         Decimal  @db.Decimal(10, 2)
  clienteId     Int      @map("cliente_id")
  alojamientoId Int      @map("alojamiento_id")

  Cliente     Cliente     @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  Alojamiento Alojamiento @relation(fields: [alojamientoId], references: [id], onDelete: Cascade)
}
